HTML :
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="stylesheet" href="./src/style.css" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>GK - Computer Science Portfolio</title>
  </head>
  <body>
    <nav>
      <div class="logo">
        <a href="#">Nebulon</a>
      </div>
      <div class="nav-items">
        <a href="#">Catalog</a>
        <a href="#">Cart</a>
      </div>
    </nav>

    <section class="hero"></section>
    <section class="sticky">
      <div class="sticky-header">
        <h1>Gautam Krishna M , GK</h1>
      </div>
      <div class="card">
        <div class="card-img">
          <img src="/img-1.png" alt="" />
        </div>
        <div class="card-content">
          <div class="card-title"><h2>Card-title</h2></div>
          <div class="card-description">
            <p>
              Lorem Ipsum is simply dummy text of the printing and typesetting
              industry. Lorem Ipsum has been the industry's standard dummy text
              ever since the 1500s,
            </p>
          </div>
        </div>
      </div>
      <div class="card">
        <div class="card-img">
          <img src="/img-2.png" alt="" />
        </div>
        <div class="card-content">
          <div class="card-title"><h2>Card-title</h2></div>
          <div class="card-description">
            <p>
              Lorem Ipsum is simply dummy text of the printing and typesetting
              industry. Lorem Ipsum has been the industry's standard dummy text
              ever since the 1500s,
            </p>
          </div>
        </div>
      </div>
      <div class="card">
        <div class="card-img">
          <img src="/img-3.png" alt="" />
        </div>
        <div class="card-content">
          <div class="card-title"><h2>Card-title</h2></div>
          <div class="card-description">
            <p>
              Lorem Ipsum is simply dummy text of the printing and typesetting
              industry. Lorem Ipsum has been the industry's standard dummy text
              ever since the 1500s,
            </p>
          </div>
        </div>
      </div>
      <div class="card">
        <div class="card-img">
          <img src="/img-4.png" alt="" />
        </div>
        <div class="card-content">
          <div class="card-title"><h2>Card-title</h2></div>
          <div class="card-description">
            <p>
              Lorem Ipsum is simply dummy text of the printing and typesetting
              industry. Lorem Ipsum has been the industry's standard dummy text
              ever since the 1500s,
            </p>
          </div>
        </div>
      </div>
      <div class="card">
        <div class="card-img">
          <img src="/img-4.png" alt="" />
        </div>
        <div class="card-content">
          <div class="card-title"><h2>Card-title</h2></div>
          <div class="card-description">
            <p>
              Lorem Ipsum is simply dummy text of the printing and typesetting
              industry. Lorem Ipsum has been the industry's standard dummy text
              ever since the 1500s,
            </p>
          </div>
        </div>
      </div>
    </section>
    <section class="outro">
      <p>(your next section goes here)</p>
    </section>
    <script type="module" src="./src/main.js"></script>
  </body>
</html>

CSS:
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  width: 100vw;
  height: 800vh;
}

img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

nav {
  position: absolute;
  top: 0;
  width: 100vw;
  padding: 1em;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.logo,
.nav-items {
  flex: 1;
}

nav a {
  text-decoration: none;
  color: #000;
  font-size: 24px;
  letter-spacing: -0.02em;
}

.nav-items {
  display: flex;
  justify-content: center;
  gap: 2em;
}

section {
  width: 100vw;
  height: 100vh;
  overflow: hidden;
}

.hero {
  background: url(/img-1.png) no-repeat 50% 50%;
  background-size: cover;
}

.outro {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #000;
}

.outro p {
  color: #ded8c8;
  font-size: 30px;
  letter-spacing: -0.005em;
}

.sticky {
  position: relative;
  background-color: #ded8c8;
}

.sticky-header {
  position: absolute;
  top: 0;
  left: 0;
  width: 250vw;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  will-change: transform;
}

.sticky-header h1 {
  margin: 0;
  color: #000;
  font-size: 20vw;
  font-weight: lighter;
  letter-spacing: -0.05em;
  line-height: 100%;
}

.card {
  position: absolute;
  top: 10%;
  left: 100%;
  width: 350px;
  height: 500px;
  background-color: #000;
  border-radius: 1em;
  padding: 0.5em;
  will-change: transform;
  z-index: 2;
}

.card .card-img {
  width: 100%;
  height: 200px;
  border-radius: 0.5em;
  overflow: hidden;
}

.card-content {
  width: 100%;
  height: 275px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  color: #fff;
  padding: 0.5em;
}

.card-content h2 {
  font-size: 42px;
  font-weight: lighter;
  letter-spacing: -0.005em;
}

.card-content p {
  font-size: 20px;
  font-weight: lighter;
  letter-spacing: -0.005em;
}

@media (max-width: 900px) {
  .nav-items {
    justify-content: flex-end;
  }
}

/* lenis smooth scrolling */
.lenis.lenis-smooth {
  scroll-behavior: auto !important;
}

.lenis.lenis-smooth [data-lenis-prevent] {
  overscroll-behavior: contain;
}

.lenis.lenis-stopped {
  overflow: hidden;
}

.lenis.lenis-smooth iframe {
  pointer-events: none;
}

JS:
import Lenis from "lenis";
import gsap from "gsap";
import { ScrollTrigger } from "gsap/ScrollTrigger";

// Register ScrollTrigger before using it
gsap.registerPlugin(ScrollTrigger);

document.addEventListener("DOMContentLoaded", () => {
  const lenis = new Lenis();
  lenis.on("scroll", ScrollTrigger.update);
  gsap.ticker.add((time) => {
    lenis.raf(time * 1000);
  });
  gsap.ticker.lagSmoothing(0);

  const stickySection = document.querySelector(".sticky");
  const stickyHeader = document.querySelector(".sticky-header");
  const cards = document.querySelectorAll(".card");
  const stickyHeight = window.innerHeight * 5;

  // hold the vertical position and rotation value
  const transform = [
    [
      [10, 50, -10, 10],
      [20, -10, -45, 20],
    ],
    [
      [0, 47.5, -10, 15],
      [-25, 15, -45, 30],
    ],
    [
      [0, 52.5, -10, 5],
      [15, -5, -40, 60],
    ],
    [
      [0, 50, 30, -80],
      [20, -10, 60, 5],
    ],
    [
      [0, 55, -15, 30],
      [25, -15, 60, 95],
    ],
  ];

  ScrollTrigger.create({
    trigger: stickySection,
    start: "top top",
    end: `+=${stickyHeight}px`,
    pin: true,
    pinSpacing: true,
    onUpdate: (self) => {
      const progress = self.progress;
      const maxTranslate = stickyHeader.offsetWidth - window.innerWidth;
      const translateX = -progress * maxTranslate;
      gsap.set(stickyHeader, { x: translateX });

      cards.forEach((cards, index) => {
        const delay = index * 0.1125;
        const cardProgress = Math.max(0, Math.min((progress - delay) * 2, 1));

        if (cardProgress > 0) {
          const cardStartx = 25;
          const cardEndx = -650;
          const ypos = transform[index][0];
          const rotation = transform[index][1];

          const cardx = gsap.utils.interpolate(
            cardStartx,
            cardEndx,
            cardProgress
          );

          const yprogress = cardProgress * 3;
          const yIndex = Math.min(Math.floor(yprogress), ypos.length - 2);
          const yinterpolation = yprogress - yIndex;
          const cardY = gsap.utils.interpolate(
            ypos[yIndex],
            ypos[yIndex + 1],
            yinterpolation
          );

          const cardRotation = gsap.utils.interpolate(
            rotation[yIndex],
            rotation[yIndex + 1],
            yinterpolation
          );

          gsap.set(cards, {
            xPercent: cardx,
            yPercent: cardY,
            rotation: cardRotation,
            opacity: 1,
          });
        } else {
          gsap.set(card, { opacity: 0 });
        }
      });
    },
  });
});
